{"version":3,"sources":["mvc/tours.js"],"names":["define","BootstrapTour","gxy_root","Galaxy","root","_","storage","step","preclick","$","orphan","hooked_tour_from_data","data","giveTour","onShow","postclick","click","onHide","onShown","textinsert","element","Collection","trigger","TourItem","Backbone","Model","extend","urlRoot","tourdata","Tours","tour","steps","model","tour_opts","goTo","tour_id","restart","getJSON","url","ToursView","title","setItem","JSON","stringify","initialize","Tour","self","success","init","console","View","render","e","preventDefault","this","fetch","error","tpl","template","$el","html","tours","models","on"],"mappings":"aAKAA,QAAQ,uBAAwB,SAASC,GACrC,IAAIC,EAA6B,oBAAXC,OAAyB,IAAMA,OAAOC,KA0BxDC,GACIC,QAAIC,OAAKC,eACLD,MAAAA,WACIF,eAAOE,WAAKC,qBAERC,MAAAA,IACHC,QAAA,GAGTC,EAAoB,SAAAC,GA+BxBC,OA9BQN,EAAAA,KAAAA,EAAAA,MAAA,SAAcA,GACVF,EAAAA,WACIE,EAAAO,OAAA,WACAL,EAAAA,KAAEM,EAAAA,SAAF,SAAAP,GAHRC,EAAAD,GAAAQ,YASAT,EAAAQ,YACAR,EAAAU,OAAA,WACAV,EAAKW,KAAAA,EAAUH,UAAW,SAAAA,GAA1BN,EAAAM,GAAAC,YAtBZT,EAAAY,aAgCAZ,EAAAW,QAAA,WATgBT,EAAEF,EAAKa,SAaFC,IAAAA,EAAAA,YACDC,QAAA,cAIhBT,GAGIU,EAAAC,SAAAC,MAAAC,QACAC,QAAIC,EAAWjB,cAGfkB,EAAIC,SAAOT,WACLK,QAEMK,IAAAA,EAAOH,YADXI,MAGAC,IAKRH,EAAKI,SAALC,GACAL,IAAAA,EAAKM,EAAL,aAAAD,EACH1B,EAjBD4B,QAAAC,EAAA,SAAA1B,GAmBA2B,IAAAA,EAAYf,EAAqBZ,GACjC4B,eADiCC,QAAA,mBAAAC,KAAAC,UAAA/B,IAGjCgC,IAAAA,EAAY,IAAAC,KACJC,EAAAA,QAEJf,MAAiBF,EAAjBE,OAEIgB,IAIIjB,EAAAkB,OACAC,EAAAA,KAAAA,GACHnB,EAAAM,aAeb,OACIG,UA9BYf,SAAS0B,KAAKxB,QAkB1ByB,MAAAA,QAEIP,WAAA,WAGQQ,IAAAA,EAAEC,KACFxC,KAAAA,WAAW,UACdyC,KALLtB,MAAA,IAAAH,EAMHyB,KAAAtB,MAAAuB,OA1BLR,QAAA,WASgBD,EAAKK,UAqBjBZ,MAAWA,WAEAN,QAHRuB,MAAA,8BAXHL,OAAQ,WACJ,IAAIM,EAAMpD,EAAEqD,SA1GhBxD,+fA2GIoD,KAAKK,IACAC,KAAKH,GAAMI,MAAOP,KAAKtB,MAAM8B,UAC7BC,GAAG,QAAS,YAAa,SAASX,GAC/BA,EAAEC,iBACFxC,EAASJ,EAAE6C,MAAM1C,KAAK,iBAOlCD,sBAAuBA,EACvBsB,UAAWA,EACXpB,SAAUA","file":"../../scripts/mvc/tours.js","sourcesContent":["/**\n *  This is the primary galaxy tours definition, currently only used for\n *  rendering a tour menu.\n */\n\ndefine([\"libs/bootstrap-tour\"], function(BootstrapTour) {\n    var gxy_root = typeof Galaxy === \"undefined\" ? \"/\" : Galaxy.root;\n\n    var tourpage_template = `<h2>Galaxy Tours</h2>\n<p>This page presents a list of interactive tours available on this Galaxy server.\nSelect any tour to get started (and remember, you can click 'End Tour' at any time).</p>\n<ul>\n<% _.each(tours, function(tour) { %>\n    <li>\n        <a href=\"/tours/<%- tour.id %>\" class=\"tourItem\" data-tour.id=<%- tour.id %>>\n            <%- tour.attributes.name || tour.id %>\n        </a>\n         - <%- tour.attributes.description || \"No description given.\" %>\n    </li>\n<% }); %>\n</ul>`;\n\n    var tour_opts = {\n        storage: window.sessionStorage,\n        onEnd: function() {\n            sessionStorage.removeItem(\"activeGalaxyTour\");\n        },\n        delay: 150, // Attempts to make it look natural\n        orphan: true\n    };\n\n    var hooked_tour_from_data = function(data) {\n        _.each(data.steps, function(step) {\n            if (step.preclick) {\n                step.onShow = function() {\n                    _.each(step.preclick, function(preclick) {\n                        // TODO: click delay between clicks\n                        $(preclick).click();\n                    });\n                };\n            }\n            if (step.postclick) {\n                step.onHide = function() {\n                    _.each(step.postclick, function(postclick) {\n                        // TODO: click delay between clicks\n                        $(postclick).click();\n                    });\n                };\n            }\n            if (step.textinsert) {\n                // Have to manually trigger a change here, for some\n                // elements which have additional logic, like the\n                // upload input box\n                step.onShown = function() {\n                    $(step.element)\n                        .val(step.textinsert)\n                        .trigger(\"change\");\n                };\n            }\n        });\n        return data;\n    };\n\n    var TourItem = Backbone.Model.extend({\n        urlRoot: gxy_root + \"api/tours\"\n    });\n\n    var Tours = Backbone.Collection.extend({\n        url: gxy_root + \"api/tours\",\n        model: TourItem\n    });\n\n    var giveTour = function(tour_id) {\n        var url = gxy_root + \"api/tours/\" + tour_id;\n        $.getJSON(url, function(data) {\n            // Set hooks for additional click and data entry actions.\n            var tourdata = hooked_tour_from_data(data);\n            sessionStorage.setItem(\"activeGalaxyTour\", JSON.stringify(data));\n            // Store tour steps in sessionStorage to easily persist w/o hackery.\n            var tour = new Tour(\n                _.extend(\n                    {\n                        steps: tourdata.steps\n                    },\n                    tour_opts\n                )\n            );\n            // Always clean restart, since this is a new, explicit giveTour execution.\n            tour.init();\n            tour.goTo(0);\n            tour.restart();\n        });\n    };\n    var ToursView = Backbone.View.extend({\n        title: \"Tours\",\n        // initialize\n        initialize: function() {\n            var self = this;\n            this.setElement(\"<div/>\");\n            this.model = new Tours();\n            this.model.fetch({\n                success: function() {\n                    self.render();\n                },\n                error: function() {\n                    // Do something.\n                    console.error(\"Failed to fetch tours.\");\n                }\n            });\n        },\n\n        render: function() {\n            var tpl = _.template(tourpage_template);\n            this.$el\n                .html(tpl({ tours: this.model.models }))\n                .on(\"click\", \".tourItem\", function(e) {\n                    e.preventDefault();\n                    giveTour($(this).data(\"tour.id\"));\n                });\n        }\n    });\n\n    return {\n        ToursView: ToursView,\n        hooked_tour_from_data: hooked_tour_from_data,\n        tour_opts: tour_opts,\n        giveTour: giveTour\n    };\n});\n"]}