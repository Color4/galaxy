{"version":3,"sources":["galaxy.interactive_environments.js"],"names":["append_notebook","url","clear_main_area","$","remove","display_spinner","make_spin_state","s","type","ajax_timeout","sleep_step","log_attempts","count","ajax_timeout_max","ajax_timeout_step","sleep_init","sleep_max","user_msg","toastr","error","ajax_timeout_init","closeButton","timeOut","extendedTimeOut","tapToDismiss","sleep","console","spin_state","clear","log","console_msg","window","setTimeout","withCredentials","success","status","error_callback","jqxhr","bool_response","success_callback","timeout_callback","spinner","ajax_params","spin_until","warn_at","message_once","info","data","wrapped_success","messages","spin_again","ajax","warning","spin","message","load_when_ready","not_ready","unknown_response","waiting","spin_error","test_ie_availability","timeout_error","wait_warn"],"mappings":"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","file":"../scripts/galaxy.interactive_environments.js","sourcesContent":["/**\n * Internal function to remove content from the main area and add the notebook.\n * Not idempotent\n */\nfunction append_notebook(url) {\n    clear_main_area();\n    $(\"#main\").append(\n        '<iframe frameBorder=\"0\" seamless=\"seamless\" style=\"width: 100%; height: 100%; overflow:hidden;\" scrolling=\"no\" src=\"' +\n            url +\n            '\"></iframe>'\n    );\n}\n\nfunction clear_main_area() {\n    $(\"#spinner\").remove();\n    $(\"#main\")\n        .children()\n        .remove();\n}\n\nfunction display_spinner() {\n    $(\"#main\").append(\n        '<img id=\"spinner\" src=\"' +\n            galaxy_root +\n            'static/style/largespinner.gif\" style=\"position:absolute;margin:auto;top:0;left:0;right:0;bottom:0;\">'\n    );\n}\n\n/* Create a spin_state object used by spin() and spin_again() */\nfunction make_spin_state(\n    type,\n    ajax_timeout_init,\n    ajax_timeout_max,\n    ajax_timeout_step,\n    sleep_init,\n    sleep_max,\n    sleep_step,\n    log_attempts\n) {\n    var s = {\n        type: typeof type !== \"undefined\" ? type : \"GIE spin\",\n        ajax_timeout:\n            typeof ajax_timeout_init !== \"undefined\" ? ajax_timeout_init : 2000,\n        ajax_timeout_max:\n            typeof ajax_timeout_max !== \"undefined\" ? ajax_timeout_max : 16000,\n        ajax_timeout_step:\n            typeof ajax_timeout_step !== \"undefined\" ? ajax_timeout_step : 500,\n        sleep: typeof sleep_init !== \"undefined\" ? sleep_init : 500,\n        sleep_max: typeof sleep_max !== \"undefined\" ? sleep_max : 8000,\n        sleep_step: typeof sleep_step !== \"undefined\" ? sleep_step : 100,\n        log_attempts: typeof log_attempts !== \"undefined\" ? log_attempts : true,\n        count: 0\n    };\n    return s;\n}\n\n/* Log/display an error when spinning fails. */\nfunction spin_error(console_msg, user_msg, clear) {\n    console.log(console_msg);\n    if (clear) clear_main_area();\n    if (typeof user_msg == \"string\") {\n        toastr.clear();\n        toastr.error(user_msg, \"Error\", {\n            closeButton: true,\n            timeOut: 0,\n            extendedTimeOut: 0,\n            tapToDismiss: false\n        });\n    }\n}\n\n/* Increase sleep time and spin again. */\nfunction spin_again(spin_state) {\n    if (spin_state.sleep < spin_state.sleep_max) {\n        spin_state.sleep += spin_state.sleep_step;\n    }\n    if (spin_state.log_attempts) {\n        console.log(\n            spin_state.type +\n                \" request \" +\n                spin_state.count +\n                \" request timeout \" +\n                spin_state.ajax_timeout +\n                \"ms sleeping \" +\n                spin_state.sleep / 1000 +\n                \"s\"\n        );\n    }\n    window.setTimeout(spin_state.spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL as long as it times out, otherwise, call the provided success or error callback. If the callback\n * returns `true`, the condition is considered \"resolved\" and spinning stops. Otherwise, continue spinning, increasing\n * AJAX timeouts and/or sleep values as configured in the spin_state.\n */\nfunction spin(\n    url,\n    bool_response,\n    success_callback,\n    timeout_callback,\n    error_callback,\n    spin_state\n) {\n    var spinner = function() {\n        var ajax_params = {\n            url: url,\n            xhrFields: {\n                withCredentials: true\n            },\n            type: \"GET\",\n            timeout: spin_state.ajax_timeout,\n            success: function(data, status, jqxhr) {\n                if (!success_callback(data, status, jqxhr))\n                    spin_again(spin_state);\n            },\n            error: function(jqxhr, status, error) {\n                if (status == \"timeout\") {\n                    if (spin_state.ajax_timeout < spin_state.ajax_timeout_max) {\n                        spin_state.ajax_timeout += spin_state.ajax_timeout_step;\n                    }\n                    spin_state.count++;\n                    if (!timeout_callback(jqxhr, status, error))\n                        spin_again(spin_state);\n                } else {\n                    spin_state.count++;\n                    if (!error_callback(jqxhr, status, error))\n                        spin_again(spin_state);\n                }\n            }\n        };\n        if (bool_response) ajax_params[\"dataType\"] = \"json\";\n        $.ajax(ajax_params);\n    };\n    console.log(\"Setting up new spinner for \" + spin_state.type + \" on \" + url);\n    spin_state.spinner = spinner;\n    window.setTimeout(spinner, spin_state.sleep);\n}\n\n/*\n * Spin on a URL forever until there is an acceptable response. \n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK).\n * @param {Boolean} bool_response: If set to `true`, do not stop spinning until the response is `true`. Otherwise, stop\n *     as soon as a successful response is received.\n */\nfunction spin_until(\n    url,\n    bool_response,\n    messages,\n    success_callback,\n    spin_state\n) {\n    var warn_at = 40; // ~2 mins\n    var message_once = function(message, spin_state) {\n        if (spin_state.count == 1) {\n            display_spinner();\n            toastr.info(message, null, {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n    };\n    var wrapped_success = function(data) {\n        if (!bool_response || (bool_response && data == true)) {\n            console.log(messages[\"success\"]);\n            clear_main_area();\n            toastr.clear();\n            success_callback();\n        } else if (bool_response && data == false) {\n            message_once(messages[\"not_ready\"], spin_state);\n            return false; // keep spinning\n        } else {\n            spin_error(\n                \"Invalid response to \" + spin_state.type + \" request\",\n                messages[\"invalid_response\"],\n                true\n            );\n        }\n        return true; // stop spinning\n    };\n    var timeout_error = function(jqxhr, status, error) {\n        message_once(messages[\"waiting\"], spin_state);\n        if (spin_state.count == warn_at) {\n            toastr.warning(messages[\"wait_warn\"], \"Warning\", {\n                closeButton: true,\n                timeOut: 0,\n                extendedTimeOut: 0,\n                tapToDismiss: false\n            });\n        }\n        return false; // keep spinning\n    };\n    spin(\n        url,\n        bool_response,\n        wrapped_success,\n        timeout_error,\n        timeout_error,\n        spin_state\n    );\n}\n\n/**\n * Test a boolean (json) response from a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test response of. Must return a 200 (302->200 is OK) and either `true` or `false`.\n * @param {String} callback: function to call once successfully connected.\n *\n */\nfunction load_when_ready(url, success_callback) {\n    var messages = {\n        success: \"Galaxy reports IE container ready, returning\",\n        not_ready:\n            \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        unknown_response:\n            \"Galaxy failed to launch a container in which to run this interactive environment, contact a Galaxy administrator.\",\n        waiting:\n            \"Galaxy is launching a container in which to run this interactive environment. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to start a container. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"Galaxy encountered an error while attempting to determine the readiness of this interactive environment's container, contact a Galaxy administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE container readiness\");\n    spin_until(url, true, messages, success_callback, spin_state);\n}\n\n/**\n * Test availability of a URL, and call a callback when done.\n * http://stackoverflow.com/q/25390206/347368\n * @param {String} url: URL to test availability of. Must return a 200 (302->200 is OK).\n * @param {String} callback: function to call once successfully connected.\n *\n */\nfunction test_ie_availability(url, success_callback) {\n    var messages = {\n        success: \"IE connection succeeded, returning\",\n        waiting:\n            \"Interactive environment container is running, attempting to connect to the IE. Please wait...\",\n        wait_warn:\n            \"It is taking an usually long time to connect to the interactive environment. Attempts will continue but you may want to report this condition to a Galaxy administrator if it does not succeed soon.\",\n        error:\n            \"An error was encountered while attempting to connect to the interactive environment, contact your administrator.\"\n    };\n    var spin_state = make_spin_state(\"IE availability\");\n    spin_until(url, false, messages, success_callback, spin_state);\n}\n"]}