{"version":3,"sources":["libs/d3.js"],"names":["d3_arraySlice","node","d3_array","ownerDocument","document","documentElement","d3_window","d3_document","defaultView","d3_element_setAttribute","a","b","NaN","d3_number","x","f","array","d3_numeric","isNaN","s","compare","left","lo","hi","arguments","length","n","mid","i","right","j","values","h","Math","d3_transposeLength","d","d3_range_integerScale","d3","permute","indexes","permutes","properties","Object","defineProperty","ctor","prototype","key","pairs","this","_","create","d3_map_proto","d3_map_zero","merged","slice","m","d3_map_escape","d3_map_remove","d3_map_keys","abs","range","start","keys","stop","step","size","k","entries","d3_map_unescape","d3_identity","source","method","value","push","d3_map_size","object","name","charAt","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","sortValues","d3_dispatch_event","dispatch","event","l","z","listeners","mapType","on","apply","valuesByKey","set","d3_Map","keyValue","listener","listenerByName","get","setter","map","depth","concat","remove","forEach","d3_eventSource","e","sortKey","sort","d3_eventDispatch","target","nest","d3_dispatch","of","thiz","argumentz","e1","e0","sourceEvent","type","sortKeys","groups","d3_subclass","add","selector","indexOf","attrNull","removeAttribute","removeAttributeNS","space","local","d3_eventPreventDefault","preventDefault","setAttribute","setAttributeNS","attrNullNS","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","trim","replace","d3_selection_classedRe","property","requote","d3_selection_classes","split","d3_selectionPrototype","d3_select","querySelector","querySelectorAll","d3_selectMatches","d3_selection_classedName","classedFunction","classedConstant","re","c","Sizzle","classList","getAttribute","lastIndex","d3_selectAll","d3_collapse","subgroup","priority","styleNull","style","removeProperty","d3_selection","setProperty","styleFunction","selectAll","styleConstant","d3_selection_property","propertyNull","propertyConstant","d3_selection_selectorAll","d3_nsPrefix","propertyFunction","d3_selection_creator","d3_selection_attr","namespaceURI","namespace","d3_nsXhtml","createElement","createElementNS","ns","qualify","createNS","parent","parentNode","data","__data__","each","d3_selection_filter","comparator","textContent","d3_ascending","innerHTML","callback","group","d3_selectionRemove","selection","d3_selection_enterInsertBefore","enter","i0","j0","exitNodes","update","keyValues","nodeByKeyValue","exit","capture","onRemove","bind","removeEventListener","$","onAdd","wrap","addEventListener","match","RegExp","d3_selection_dataNode","d3_selection_onListener","d3_selection_enter","d3_selection_onFilter","removeAll","subgroups","related","compareDocumentPosition","call","next","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_selection_sortComparator","d3_event_dragSelect","order","suppressClick","off","d3_selection_each","setTimeout","args","changedTouches","svg","container","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","window","scrollY","position","margin","padding","border","getScreenCTM","ctm","point","pageX","y","pageY","clientX","clientY","inverse","d3_selection_enterPrototype","rect","getBoundingClientRect","clientLeft","top","clientTop","d3_behavior_dragTouchId","nodes","d3_sgn","d3_cross2d","d3_selection_on","π","acos","d3_asin","halfπ","asin","filter","d3_selection_onFilters","d3_tanh","d3_haversin","d3_color","g","mousedown","mousedowned","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","__chart__","m1","m2","vv","round","cx","center0","dx","cy","dy","interpolateZoom","d3_hcl","view","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","rescale","zoom","cos","d3_radians","sin","d3_hcl_lab","d3_rgb","center","d3_lab_X","d3_lab_xyz","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","duration","d3_xyz_lab","pow","x1","d3_rgbNumber","d3_rgbString","max","toString","min","that","format","hsl","color","exec","toLowerCase","scaleTo","translateTo","parseFloat","transition","d3_rgb_parseNumber","invert","zooming","parseInt","translate","dragged","subject","dragRestore","d3_selection_interrupt","moved","mouse","zoomed","d3_rgb_xyz","ended","mousemove","mouseup","locations0","d3_functor","d3_hclPrototype","darker","mimeType","d3_xhr","url","response","d3_labPrototype","result","brighter","status","d3_xhrHasResponse","request","d3_lab_K","xhr","error","load","headers","XMLHttpRequest","responseType","test","XDomainRequest","onload","onerror","respond","onreadystatechange","progress","o","header","d3_rgbPrototype","send","overrideMimeType","abort","d3_rgb_hex","rebind","d3_xhr_fixCallback","responseText","floralwhite","delay","then","forestgreen","fuchsia","gainsboro","Date","now","ghostwhite","timer","gold","goldenrod","gray","khaki","greenyellow","d3_timer_queueTail","d3_timer_queueHead","grey","honeydew","hotpink","clearTimeout","d3_timer_timeout","indianred","indigo","d3_timer_step","lavenderblush","lawngreen","d3_timer_sweep","lemonchiffon","lightblue","lightcoral","lightcyan","lightgray","lightgrey","lightpink","lightyellow","limegreen","lime","linen","t","magenta","mediumaquamarine","mediumorchid","mediumseagreen","mediumpurple","time","Infinity","mediumslateblue","mediumspringgreen","t1","mediumturquoise","midnightblue","t0","navajowhite","moccasin","oldlace","p","olive","ceil","log","LN10","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seashell","skyblue","locale","slateblue","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","slategrey","slategray","springgreen","substring","steelblue","tan","thistle","reverse","join","tomato","turquoise","specifier","violet","d3_format_re","fill","align","sign","symbol","zfill","comma","precision","scale","prefix","suffix","integer","exponent","wheat","white","whitesmoke","yellow","d3_rgb_names","functor","readyState","onprogress","d3_format_typeDefault","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","zcomma","Array","d3_date_utc","reFormat","delimiter","UTC","eol","number","text","d0","delimiterCode","date","d1","d3_date","offset","rows","times","dt","fields","fieldSet","utc","dsv","formatRows","formatRow","d3_time_interval_utc","floor","formatValue","range_utc","d3_timer_interval","d3_timer_frame","d3_timer","template","charCodeAt","d3_time_formatPads","d3_time_formats","d3_format_precision","string","H","S","L","d3_formatPrefixes","Z","d3_formatPrefix","localZ","setFullYear","W","getDay","U","setHours","M","locale_decimal","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_dayRe","d3_time","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","getDate","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parse","d3_time_parseLocaleDate","d3_time_parseLocaleTime","getUTCMilliseconds","X","d3_time_parseAmPm","getUTCMinutes","d3_time_periodLookup","getMonth","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","B","d3_time_formatPad","getHours","d3_format_types","getMinutes","getSeconds","sundayOfYear","Y","%","d3_time_parseWeekday","d3_time_parseDay","d3_time_parseHour24","I","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","getTimezoneOffset","names","d3_time_prototype","setUTCDate","setDay","setUTCFullYear","d3_time_numberRe","setMilliseconds","setUTCMilliseconds","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","d3_time_expandYear","zs","zh","zm","formats","interval","day","bv","d3_locale_timeFormat","hasOwnProperty","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","lineStart","coordinate","polygonStart","polygonEnd","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","vector","A","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_time_zone","cz","d3_acos","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_time_percentRe","lineEnd","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","d3_adder","segment","numberFormat","d3_locale_numberFormat","timeFormat","p0","p1","d3_locale_enUS","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","d3_adderSum","points","d3_adderTemp","current","isSubject","reset","valueOf","av","stream","d3_geo_streamObjectType","d3_geo_streamGeometry","Feature","FeatureCollection","features","other","Sphere","Point","d3_geo_clip","pointVisible","clipLine","clipStart","MultiPoint","rotate","closed","d3_geo_streamPolygon","d3_geo_areaSum","geo","ringListener","d3_geo_areaRingSum","sphere","ringEnd","ring","clean","ringSegments","buffer","area","d3_geo_areaRingStart","polygonStarted","pop","shift","d3_geo_clipSegmentLength1","polygon","pointRing","LineString","ringStart","MultiLineString","merge","d3_geo_pointInPolygon","rotatedClipStart","d3_geo_clipSort","geometries","d3_geo_clipBufferListener","lines","rejoin","d3_geo_cartesianAdd","d3_geo_clipAntimeridianLine","φ0","sλ0","d3_geo_cartesianNormalize","λ1","φ1","sλ1","λ__","φ__","dλSum","bound","ringPoint","d3_geo_clipAntimeridianIntersect","ranges","atan","cosφ1","sinλ0_λ1","d3_geo_clipAntimeridianInterpolate","from","to","direction","normal","d3_geo_cartesianCross","equatorial","inflection","λ_","λi","antimeridian","φi","meridian","parallel","meridianNormal","polarAngle","winding","angle","point0","arc","intersection","φarc","linePoint","d3_geo_clipCircle","radius","visible","cr","v00","point2","smallRadius","code","v0","point1","withinRange","intersect","feature","compareRanges","notHemisphere","best","centroid","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c2","uu","t2","d3_geo_centroidLineStart","q","polar","δλ","q1","d3_geo_circleInterpolate","d3_geom_clipLine","y1","line","ax","ay","bx","by","d3_geo_centroidRingStart","d3_geo_clipExtent","corner","ca","cb","insidePolygon","wn","a1","comparePoints","first","x_","y_","v_","d3_geo_clipExtentMAX","x__","v__","listener_","bufferListener","d3_true","inside","projectAt","d3_geo_projectionMutator","d3_geo_conicEqualArea","ρ","C","pointLine","ρ0","ρ0_y","d3_geo_pathArea","x00","y00","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","pointCircle","pointLineStart","lineEndPolygon","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidPoint","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","context","τ","moveTo","lineTo","closePath","pointRadius","c0","d3_geo_resample","project","resampleNone","c1","resample","resampleLineTo","b0","d3_geo_cartesianScale","a00","a0","b00","c00","maxDepth","n1xn2","b1","d2","φ2","λ2","x2","y2","dx2","dy2","dz","δ2","cosMinDistance","d3_geo_pathProjectStream","extent","d3_geo_transformPoint","d3_geo_projection","δx","δy","projectRotate","d3_geo_compose","d3_geo_rotation","δφ","δγ","invalidate","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","projection","output","valid","y__","d3_geo_equirectangular","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_identityRotation","d3_geo_forwardRotationλ","rotation","forward","cosδφ","sinδφ","cosδγ","sinδγ","conicEqualArea","d3_geo_conic","raw","lower48Stream","sr","alaskaStream","hawaiiStream","PI","d3_geo_pathBufferCircle","sy0","cy1","sy1","kx0","cy0","ky0","kx1","ky1","distance","d3_geo_pathCentroidRingStart","cosΔλ","d3_geo_length","d3_geo_azimuthal","cosλ","sinc","cosc","F","d3_geo_conicEquidistant","G","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geo_pathAreaSum","hull","projectStream","hs","path","d3_geom_hullOrder","bounds","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","d3_geom_voronoiBeach","beach","d3_geom_voronoiBeaches","vertex","N","disappearing","d3_geom_voronoiDetachBeach","lArc","previous","projectionMutator","unshift","d3_geom_voronoiDetachCircle","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","dxl","dxr","directrix","d3_geom_voronoiRightBreakPoint","d3_geo_projectionRadians","P","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","plby2","hl","aby2","lfocy","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircle","origin","R","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geo_circleAngle","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","Δλ","sinφ1","graticule","DX","DY","Y1","minorExtent","d3_geom_voronoiEdge","X0","Y0","d3_geom_voronoiHalfEdge","X1","d3_geom_voronoiCreateBorderEdge","majorStep","d3_geom_voronoiRedBlackRotateLeft","tree","conicConformal","d3_geo_conicConformal","d3_geo_gnomonic","cosλcosφ","d3_geo_mercator","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geo_mercatorProjection","d3_geom_voronoiCircles","d3_geom_voronoiRemoveBeach","diagram","skipLeft","lower","skipRight","d3_geom_quadtreeCompatY","d3_geom_voronoiFirstCircle","d3_geom_voronoiBeachPool","sy","children","d3_geom_quadtreeVisit","sx","closestPoint","minDistance2","distance2","ym","xm","below","find","root","br","ar","bg","ag","bb","ab","d3_interpolate","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","d3_interpolateNumber","interpolators","na","nb","n0","splice","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_geom_voronoiHalfEdgeOrder","d3_ease_exp","d3_ease_circle","al","bh","ah","bc","ac","bl","as","d3_interpolateLab","lab","ba","aa","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","d3_geom_voronoiConnectEdge","d3_interpolateTransformPop","ta","tb","ra","rb","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_interpolateTranslate","d3_interpolateRotate","d3_uninterpolateNumber","link","d3_layout_bundleLeastCommonAncestor","lca","d3_geom_voronoiRedBlackTree","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","x2_","x1_","y2_","compat","d3_layout_forceAccumulate","quad","alpha","charges","y1_","charge","ys","xs","leaf","random","pointCharge","ny","nx","hierarchy","quadtree","d3_layout_hierarchyLinks","d3_geom_quadtreeNode","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","child","d3_ease_default","d3_ease","linear","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackMaxIndex","d3_ease_elastic","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinFixed","LN2","interpolateRound","d3_interpolateRound","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","d3_transformIdentity","d3_layout_packSplice","interpolateTransform","dr","xMin","yMin","yMax","xMax","d3_layout_packLink","d3_layout_packPlace","_pack_prev","s1","isect","d3_layout_packIntersects","s2","d3_interpolateSkew","d3_layout_packUnlink","d3_layout_packTransform","d3_uninterpolateClamp","db","paths","links","dc","da","d3_layout_treeSeparation","d3_layout_treeLeft","sortChords","resort","d3_layout_treeMove","change","wp","wm","chord","matrix","chords","d3_layout_treeShift","sortGroups","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","dw","chargeDistance2","py","d3_layout_clusterLeft","d3_layout_clusterRight","dn","force","neighbors","weight","d3_scaleExtent","domain","candidates","dimension","d3_scaleRange","rangeExtent","resume","uninterpolate","drag","nice","i1","behavior","d3_scale_niceStep","bisect","clamp","d3_scale_polylinear","d3_scale_bilinear","input","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","layout","Number","d3_layout_hierarchyValue","stack","childs","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_nice","d3_scale_linearTickRange","span","err","revalue","d3_layout_hierarchyVisitBefore","d3_scale_linearTickFormat","d3_layout_hierarchyRebind","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","d3_layout_hierarchySort","partition","niced","d3_scale_logNiceNegative","isFinite","d3_scale_logFormat","padAngle","powp","pie","powb","d3_scale_powPow","startAngle","sum","arcs","index","endAngle","d3_scale_pow","ranger","rangeBand","d3_layout_pieSortByValue","d3_layout_stackOffsetZero","has","xi","d3_layout_stackX","series","orders","offsets","out","steps","d3_layout_stackOrders","outerPadding","d3_scale_ordinal","bottoms","thresholds","quantile","wiggle","silhouette","sums","quantiles","d3_scale_quantize","o0","invertExtent","expand","d3_scale_threshold","identity","valuer","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcEndAngle","d3_svg_arcCornerTangents","rc","cw","y01","x01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","d3_geom_pointY","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineStep","d3_svg_lineStepAfter","d3_svg_lineHermite","d3_svg_lineCardinalTangents","tangents","pi","separation","nodeSize","root1","wrapTree","root0","firstWalk","lp","bottom","p2","px","d3_svg_lineDot4","d3_svg_lineBasisBezier3","queue","node1","siblings","midpoint","d3_svg_lineBasisBezier","secondWalk","vop","sip","vip","d3_svg_lineBundle","som","vom","d3_layout_treeRight","sim","sop","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_layout_treeAncestor","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","cluster","previousNode","d3_svg_chordRadius","row","d3_svg_symbolSize","stickies","stickify","squarify","active","d3_layout_treemapPad","interrupt","id","d3_transitionPrototype","tween","d3_scale_linear","d3_transitionNode","inherit","elapsed","activeId","lock","cancelId","cancel","count","tick","tweens","ease","schedule","attr","innerRadius","methods","d3_svg_arcStartAngle","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_svg_arcPadAngle","d3_time_scaleDate","skip","tickMethod","d3_json","d3_svg_lineBasisOpen","JSON","parse","d3_svg_lineBasisClosed","monotone","d3_svg_lineMonotone","createRange","version","list","childNodes","nodeType","Element","d3_element_prototype","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","median","numbers","variance","deviation","d3_bisect","d3_bisector","bisector","shuffle","transpose","zip","arrays","bisectLeft","Error","d3_class","d3_map_has","empty","rollup","enumerable","isArray","keyMap","d3_Set","d3_map_empty","d3_rebind","d3_requote_re","__proto__","matches","d3_vendorSymbol","subnode","d3_selection_selector","xhtml","xlink","xml","xmlns","getAttributeNS","contains","d3_selection_classed","d3_selection_style","getPropertyValue","appendChild","insertBefore","nodeData","groupData","updateNodes","enterNodes","datum","nextSibling","html","append","upgroup","d3_documentElement","mouseenter","mouseleave","navigator","userAgent","touches","touchstart","move","dragId","position1","position0","dragOffset","dragSubject","dragName","correspondingElement","dragstart","touch","d3_mousePoint","identifier","τε","SQRT2","ux0","uy1","w1","ux1","uy0","w0","exp","d3_cosh","coshr0","d3_sinh","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","zoomTo","location0","location","zoomstarted","relocate","scale0","touchmove","touchend","targets","changed","l0","l1","distance1","scale1","distance0","ρ4","touchtime","zoomName","zoomended","started","scaleExtent","d3_behavior_zoomInfinity","translate0","mousewheelTimer","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","detail","view1","d3_transitionInheritId","d3_hslPrototype","hcl","d3_lab_rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","blue","blueviolet","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","darkblue","darkcyan","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkred","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","green","lightgoldenrodyellow","lightgreen","lightsalmon","lightseagreen","mediumvioletred","mintcream","navy","olivedrab","orangered","palegoldenrod","palegreen","palevioletred","papayawhip","peachpuff","peru","powderblue","purple","seagreen","snow","teal","yellowgreen","d3_xhrType","typedResponse","darkorange","darkorchid","darksalmon","stringify","parseRows","EOF","EOL","token","black","brown","burlywood","field","darkgoldenrod","darkviolet","lightskyblue","lightslategray","lightslategrey","orange","paleturquoise","pink","open","setRequestHeader","beforesend","toPrecision","toExponential","toFixed","getUTCDay","getFullYear","getMilliseconds","Function","getUTCSeconds","getTime","setDate","setUTCDay","d3_timer_mark","dayOfYear","week","sunday","weeks","-","0","years","GeometryCollection","albers","parallels","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","d3_geo_pathAreaPolygon","d3_geo_pathBoundsY0","d3_geo_pathAreaRingStart","d3_geo_pathBounds","contextStream","cacheStream","d3_geo_transform","equirectangular","sinΔλ","minorStep","d3_geo_graticuleX","d3_geo_graticuleY","majorExtent","greatArc","source_","target_","d3_target","d3_geo_lengthSum","d3_geo_lengthLineStart","azimuthalEqualArea","d3_geo_pathContext","d3_geo_azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicEquidistant","resampleRecursive","gnomonic","d3_geo_orthographic","d3_geo_stereographic","geom","vertices","flippedPoints","d3_geom_hullUpper","upper","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","grandpa","uncle","d3_geom_voronoiRedBlackFirst","d3_source","d3_geo_interpolate","sibling","azimuthal","d3_geom_voronoiRedBlackRotateRight","voronoi","polygons","orthographic","stereographic","mercator","d3_geom_voronoiClipExtent","transverseMercator","triangles","s0","d3_geom_voronoiTriangleArea","delaunay","insertChild","nPoint","d3_geom_quadtreeCompatX","interpolateObject","d3_geom_voronoiAddBeach","interpolateString","d3_interpolateRgb","d3_interpolateArray","d3_interpolateObject","interpolateArray","poly","d3_ease_quad","cubic","elastic","back","d3_ease_back","d3_ease_mode","in","d3_ease_reverse","in-out","out-in","interpolateHcl","d3_interpolateHcl","interpolateHsl","interpolateLab","baseVal","consolidate","skew","bundle","groupSums","groupIndex","subgroupIndex","sortSubgroups","di","dj","subindex","theta2","dragmove","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","gravity","repulse","theta","d3_layout_forceDragend","d3_layout_forceMouseover","d3_layout_forceMouseout","visit","d3_geom_quadtreeFind","interpolateRgb","interpolateNumber","d3_layout_stackY","d3_layout_stackOffsets","inside-out","tops","default","d3_ease_reflect","d3_ease_clamp","s3","zero","histogram","d3_ease_bounce","bin","bins","binner","frequency","d3_layout_histogramBinSturges","d3_interpolateHsl","pack","d3_layout_packSiblings","sizeNode","tx","relayout","score","pad","remaining","mode","worst","rmax","rmin","ratio","flush","sticky","d3_layout_treemapPadNull","treemap","chargeDistance","_typeof","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_niceIdentity","ordinal","d3_category10","category20b","d3_category20b","d3_category20c","d3_scale_quantile","threshold","d3_scale_identity","circleSegment","rp","ap","padRadius","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","d3_svg_arcSweep","t21","t03","d3_svg_arcOuterRadius","d3_zero","d3_svg_arcAuto","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","basis","d3_svg_lineBasis","basis-open","basis-closed","cardinal","d3_svg_lineCardinal","d3_svg_lineCardinalOpen","d3_svg_lineCardinalClosed","d3_svg_area","d3_svg_lineRadial","equals","curve","self","diagonal","p3","d3_svg_diagonalProjection","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","d3_svg_symbolCircle","d3_svg_symbolType","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionNamespace","d3_transitionInherit","d3_transition","d3_selection_interruptNS","d3_transitionId","subnodes","nameNS","attrTween","d3_transition_tween","attrTweenNS","rangeRound","getComputedStyle","styleString","styleTween","d3_transition_text","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisY","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","background","rangeRoundBands","resizes","resize","backgroundUpdate","redrawY","gUpdate","redraw","quantize","xExtent","yExtent","redrawX","brushstart","keydown","keyCode","dragging","brushmove","altKey","resizingY","move1","event_","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","resizingX","classed","keyup","ey","ex","xClamp","yClamp","d3_svg_brushResizes","category10","category20","extent1","category20c","extent0","d3_category20","yi","clear","d3_svg_brushCursor","nw","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","toISOString","d3_time_formatIsoNative","second","seconds","minutes","minute","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scale","d3_time_scaleUtcMethods","getUTCHours","getUTCDate","d3_time_scaleUtcFormat","json","define","amd","module","exports"],"mappings":"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","file":"../../scripts/libs/d3.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();"]}