{"version":3,"sources":["libs/raven.js"],"names":["f","exports","_typeof","module","define","amd","g","window","global","self","this","Raven","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","stringify","obj","replacer","spaces","cycleReplacer","JSON","serializer","stack","keys","key","value","slice","indexOf","join","thisPos","splice","push","Infinity","getSerialize","2","RavenConfigError","message","name","prototype","3","wrapMethod","console","level","callback","originalConsoleLevel","originalConsole","sentryLevel","args","arguments","msg","data","logger","extra","Function","apply","4","now","utils","_hasJSON","hasKey","_hasDocument","each","_lastCapturedException","_lastEventId","truncate","_globalServer","urlencode","_globalKey","uuid4","_globalProject","htmlTreeAsString","_globalContext","_globalOptions","ignoreErrors","ignoreUrls","whitelistUrls","includePaths","crossOrigin","collectWindowErrors","maxMessageLength","stackTraceLimit","_ignoreOnError","_isRavenInstalled","_originalErrorStackTraceLimit","_originalConsole","_originalConsoleMethods","_plugins","_startTime","_wrappedBuiltIns","_breadcrumbs","_breadcrumbLimit","_lastCapturedEvent","_keypressTimeout","location","_location","href","method","TraceKit","isFunction","isError","isEmptyObject","joinRegExp","wrapConsoleMethod","dsnKeys","split","dsnPattern","VERSION","debug","config","dsn","options","_logDebug","uri","_parseDSN","lastSlash","path","lastIndexOf","substr","user","_getGlobalServer","_globalEndpoint","install","isSetup","report","_globalSecret","_handleOnErrorStackInfo","_wrapBuiltIns","_drainPlugins","context","func","undefined","wrap","_before","wrapped","deep","_ignoreNextOnError","captureException","isUndefined","__raven__","__raven_wrapper__","property","__inner__","uninstall","_restoreBuiltIns","ex","captureMessage","_handleStackInfo","ex1","test","_send","objectMerge","captureBreadcrumb","crumb","timestamp","addPlugin","plugin","pluginArgs","Array","setUserContext","setExtraContext","_mergeContext","setTagsContext","tags","getContext","parse","clearContext","environment","setRelease","release","setDataCallback","original","dataCallback","setShouldSendCallback","shouldSendCallback","setTransport","transport","lastException","lastEventId","ravenNotConfiguredError","afterLoad","RavenConfig","document","eventId","_dsn","encode","encodeURIComponent","qs","showReportDialog","email","globalServer","script","async","src","head","body","appendChild","setTimeout","_triggerEvent","evt","eventType","toUpperCase","createEvent","dispatchEvent","_breadcrumbEventHandler","evtName","target","elem","category","_keypressEventHandler","tagName","timeout","clearTimeout","_captureUrlChange","from","to","parsedLoc","parseUrl","parsedTo","parsedFrom","protocol","host","relative","fill","noUndo","orig","replacement","wrapTimeFn","fn","originalCallback","wrapProp","prop","xhr","before","proto","requestAnimationFrame","cb","addEventListener","eventTargets","hasOwnProperty","handleEvent","err","wrapEventTarget","capture","secure","url","attachEvent","__raven_xhr","status_code","xhrproto","XMLHttpRequest","onreadystatechangeHandler","readyState","status","type","origOpen","props","j","origSend","chrome","app","runtime","oldOnPopState","onpopstate","onreadystatechange","_lastHref","currentHref","history","origPushState","hasPushState","consoleMethodCallback","log","_","$","jQuery","ready","builtin","shift","installer","concat","str","m","exec","pass","allowSecretKey","port","stackInfo","frames","frame","_normalizeFrame","_processException","lineno","normalized","filename","function","colno","in_app","fileurl","reverse","stacktrace","culprit","max","exception","values","_trimPacket","_getHttpData","httpData","User-Agent","navigator","userAgent","referrer","headers","Referer","globalOptions","project","platform","baseData","request","serverName","server_name","event_id","auth","sentry_version","sentry_client","sentry_key","_makeRequest","opts","handler","onSuccess","hasCORS","onError","XDomainRequest","replace","onload","send","setUser","setReleaseContext","7","RavenConstructor","_Raven","noConflict","6","objectPrototype","what","isString","toString","isObject","obj1","obj2","object","patterns","pattern","sources","len","source","RegExp","pairs","match","query","fragment","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","Math","random","nextStr","out","height","sepLength","htmlElementAsString","parentNode","className","classes","attr","toLowerCase","id","attrWhitelist","getAttribute","Object","getLocationHref","_slice","UNKNOWN_FUNCTION","ERROR_TYPES_RE","subscribe","installGlobalHandler","handlers","unsubscribe","unsubscribeAll","uninstallGlobalHandler","notifyHandlers","isWindowError","inner","traceKitWindowOnError","lineNo","lastExceptionStack","computeStackTrace","augmentStackTraceWithInitialElement","processLastException","groups","line","column","colNo","_oldOnerrorHandler","_onErrorHandlerInstalled","onerror","lastArgs","_lastExceptionStack","_lastArgs","incomplete","rethrow","computeStackTraceFromStackProp","parts","element","gecko","winjs","lines","isNative","columnNumber","computeStackTraceFromStacktraceProp","opera10Regex","opera11Regex","computeStackTraceFromOperaMultiLineMessage","lineRE1","lineRE2","lineRE3","getElementsByTagName","item","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","input","substring","result","sourceURL","fileName","lineNumber","description"],"mappings":"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","file":"../../scripts/libs/raven.js","sourcesContent":["/*! Raven.js 3.3.0 (74c6c03) | github.com/getsentry/raven-js */\n\n/*\n * Includes TraceKit\n * https://github.com/getsentry/TraceKit\n *\n * Copyright 2016 Matt Robenolt and other contributors\n * Released under the BSD license\n * https://github.com/getsentry/raven-js/blob/master/LICENSE\n *\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Raven = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\nexports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\n\nfunction RavenConfigError(message) {\n    this.name = 'RavenConfigError';\n    this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n\n},{}],3:[function(_dereq_,module,exports){\n'use strict';\n\nvar wrapMethod = function(console, level, callback) {\n    var originalConsoleLevel = console[level];\n    var originalConsole = console;\n\n    if (!(level in console)) {\n        return;\n    }\n\n    var sentryLevel = level === 'warn'\n        ? 'warning'\n        : level;\n\n    console[level] = function () {\n        var args = [].slice.call(arguments);\n\n        var msg = '' + args.join(' ');\n        var data = {level: sentryLevel, logger: 'console', extra: {'arguments': args}};\n        callback && callback(msg, data);\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n            // IE9 doesn't allow calling apply on console functions directly\n            // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n            Function.prototype.apply.call(\n                originalConsoleLevel,\n                originalConsole,\n                args\n            );\n        }\n    };\n};\n\nmodule.exports = {\n    wrapMethod: wrapMethod\n};\n\n},{}],4:[function(_dereq_,module,exports){\n/*global XDomainRequest:false*/\n'use strict';\n\nvar TraceKit = _dereq_(7);\nvar RavenConfigError = _dereq_(2);\nvar utils = _dereq_(6);\nvar stringify = _dereq_(1);\n\nvar isFunction = utils.isFunction;\nvar isUndefined = utils.isUndefined;\nvar isError = utils.isError;\nvar isEmptyObject = utils.isEmptyObject;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar parseUrl = utils.parseUrl;\nvar isString = utils.isString;\n\nvar wrapConsoleMethod = _dereq_(3).wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n    return +new Date();\n}\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n    this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n    // Raven can run in contexts where there's no document (react-native)\n    this._hasDocument = typeof document !== 'undefined';\n    this._lastCapturedException = null;\n    this._lastEventId = null;\n    this._globalServer = null;\n    this._globalKey = null;\n    this._globalProject = null;\n    this._globalContext = {};\n    this._globalOptions = {\n        logger: 'javascript',\n        ignoreErrors: [],\n        ignoreUrls: [],\n        whitelistUrls: [],\n        includePaths: [],\n        crossOrigin: 'anonymous',\n        collectWindowErrors: true,\n        maxMessageLength: 0,\n        stackTraceLimit: 50\n    };\n    this._ignoreOnError = 0;\n    this._isRavenInstalled = false;\n    this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n    // capture references to window.console *and* all its methods first\n    // before the console plugin has a chance to monkey patch\n    this._originalConsole = window.console || {};\n    this._originalConsoleMethods = {};\n    this._plugins = [];\n    this._startTime = now();\n    this._wrappedBuiltIns = [];\n    this._breadcrumbs = [];\n    this._breadcrumbLimit = 20;\n    this._lastCapturedEvent = null;\n    this._keypressTimeout;\n    this._location = window.location;\n    this._lastHref = this._location && this._location.href;\n\n    for (var method in this._originalConsole) {  // eslint-disable-line guard-for-in\n      this._originalConsoleMethods[method] = this._originalConsole[method];\n    }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n    // Hardcode version string so that raven source can be loaded directly via\n    // webpack (using a build step causes webpack #1617). Grunt verifies that\n    // this value matches package.json during build.\n    //   See: https://github.com/getsentry/raven-js/issues/465\n    VERSION: '3.3.0',\n\n    debug: false,\n\n    TraceKit: TraceKit, // alias to TraceKit\n\n    /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Optional set of of global options [optional]\n     * @return {Raven}\n     */\n    config: function(dsn, options) {\n        var self = this;\n\n        if (this._globalServer) {\n                this._logDebug('error', 'Error: Raven has already been configured');\n            return this;\n        }\n        if (!dsn) return this;\n\n        // merge in options\n        if (options) {\n            each(options, function(key, value){\n                // tags and extra are special and need to be put into context\n                if (key === 'tags' || key === 'extra') {\n                    self._globalContext[key] = value;\n                } else {\n                    self._globalOptions[key] = value;\n                }\n            });\n        }\n\n        var uri = this._parseDSN(dsn),\n            lastSlash = uri.path.lastIndexOf('/'),\n            path = uri.path.substr(1, lastSlash);\n\n        this._dsn = dsn;\n\n        // \"Script error.\" is hard coded into browsers for errors that it can't read.\n        // this is the result of a script being pulled in from an external domain and CORS.\n        this._globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n        this._globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n        // join regexp rules into one big rule\n        this._globalOptions.ignoreErrors = joinRegExp(this._globalOptions.ignoreErrors);\n        this._globalOptions.ignoreUrls = this._globalOptions.ignoreUrls.length ? joinRegExp(this._globalOptions.ignoreUrls) : false;\n        this._globalOptions.whitelistUrls = this._globalOptions.whitelistUrls.length ? joinRegExp(this._globalOptions.whitelistUrls) : false;\n        this._globalOptions.includePaths = joinRegExp(this._globalOptions.includePaths);\n\n        this._globalKey = uri.user;\n        this._globalSecret = uri.pass && uri.pass.substr(1);\n        this._globalProject = uri.path.substr(lastSlash + 1);\n\n        this._globalServer = this._getGlobalServer(uri);\n\n        this._globalEndpoint = this._globalServer +\n            '/' + path + 'api/' + this._globalProject + '/store/';\n\n        TraceKit.collectWindowErrors = !!this._globalOptions.collectWindowErrors;\n\n        // return for chaining\n        return this;\n    },\n\n    /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n    install: function() {\n        var self = this;\n        if (this.isSetup() && !this._isRavenInstalled) {\n            TraceKit.report.subscribe(function () {\n                self._handleOnErrorStackInfo.apply(self, arguments);\n            });\n            this._wrapBuiltIns();\n\n            // Install all of the plugins\n            this._drainPlugins();\n\n            this._isRavenInstalled = true;\n        }\n\n        Error.stackTraceLimit = this._globalOptions.stackTraceLimit;\n        return this;\n    },\n\n    /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n    context: function(options, func, args) {\n        if (isFunction(options)) {\n            args = func || [];\n            func = options;\n            options = undefined;\n        }\n\n        return this.wrap(options, func).apply(this, args);\n    },\n\n    /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n    wrap: function(options, func, _before) {\n        var self = this;\n        // 1 argument has been passed, and it's not a function\n        // so just return it\n        if (isUndefined(func) && !isFunction(options)) {\n            return options;\n        }\n\n        // options is optional\n        if (isFunction(options)) {\n            func = options;\n            options = undefined;\n        }\n\n        // At this point, we've passed along 2 arguments, and the second one\n        // is not a function either, so we'll just return the second argument.\n        if (!isFunction(func)) {\n            return func;\n        }\n\n        // We don't wanna wrap it twice!\n        try {\n            if (func.__raven__) {\n                return func;\n            }\n        } catch (e) {\n            // Just accessing the __raven__ prop in some Selenium environments\n            // can cause a \"Permission denied\" exception (see raven-js#495).\n            // Bail on wrapping and return the function as-is (defers to window.onerror).\n            return func;\n        }\n\n        // If this has already been wrapped in the past, return that\n        if (func.__raven_wrapper__ ){\n            return func.__raven_wrapper__ ;\n        }\n\n        function wrapped() {\n            var args = [], i = arguments.length,\n                deep = !options || options && options.deep !== false;\n\n            if (_before && isFunction(_before)) {\n                _before.apply(this, arguments);\n            }\n\n            // Recursively wrap all of a function's arguments that are\n            // functions themselves.\n            while(i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n            try {\n                return func.apply(this, args);\n            } catch(e) {\n                self._ignoreNextOnError();\n                self.captureException(e, options);\n                throw e;\n            }\n        }\n\n        // copy over properties of the old function\n        for (var property in func) {\n            if (hasKey(func, property)) {\n                wrapped[property] = func[property];\n            }\n        }\n        wrapped.prototype = func.prototype;\n\n        func.__raven_wrapper__ = wrapped;\n        // Signal that this function has been wrapped already\n        // for both debugging and to prevent it to being wrapped twice\n        wrapped.__raven__ = true;\n        wrapped.__inner__ = func;\n\n        return wrapped;\n    },\n\n    /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n    uninstall: function() {\n        TraceKit.report.uninstall();\n\n        this._restoreBuiltIns();\n\n        Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n        this._isRavenInstalled = false;\n\n        return this;\n    },\n\n    /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n    captureException: function(ex, options) {\n        // If not an Error is passed through, recall as a message instead\n        if (!isError(ex)) return this.captureMessage(ex, options);\n\n        // Store the raw exception object for potential debugging and introspection\n        this._lastCapturedException = ex;\n\n        // TraceKit.report will re-raise any exception passed to it,\n        // which means you have to wrap it in try/catch. Instead, we\n        // can wrap it here and only re-raise if TraceKit.report\n        // raises an exception different from the one we asked to\n        // report on.\n        try {\n            var stack = TraceKit.computeStackTrace(ex);\n            this._handleStackInfo(stack, options);\n        } catch(ex1) {\n            if(ex !== ex1) {\n                throw ex1;\n            }\n        }\n\n        return this;\n    },\n\n    /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n    captureMessage: function(msg, options) {\n        // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n        // early call; we'll error on the side of logging anything called before configuration since it's\n        // probably something you should see:\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n            return;\n        }\n\n        // Fire away!\n        this._send(\n            objectMerge({\n                message: msg + ''  // Make sure it's actually a string\n            }, options)\n        );\n\n        return this;\n    },\n\n    captureBreadcrumb: function (obj) {\n        var crumb = objectMerge({\n            timestamp: now() / 1000\n        }, obj);\n\n        this._breadcrumbs.push(crumb);\n        if (this._breadcrumbs.length > this._breadcrumbLimit) {\n            this._breadcrumbs.shift();\n        }\n    },\n\n    addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n        var pluginArgs = Array.prototype.slice.call(arguments, 1);\n\n        this._plugins.push([plugin, pluginArgs]);\n        if (this._isRavenInstalled) {\n            this._drainPlugins();\n        }\n\n        return this;\n    },\n\n    /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n    setUserContext: function(user) {\n        // Intentionally do not merge here since that's an unexpected behavior.\n        this._globalContext.user = user;\n\n        return this;\n    },\n\n    /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n    setExtraContext: function(extra) {\n        this._mergeContext('extra', extra);\n\n        return this;\n    },\n\n    /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n    setTagsContext: function(tags) {\n        this._mergeContext('tags', tags);\n\n        return this;\n    },\n\n    /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n    clearContext: function() {\n        this._globalContext = {};\n\n        return this;\n    },\n\n    /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n    getContext: function() {\n        // lol javascript\n        return JSON.parse(stringify(this._globalContext));\n    },\n\n\n    /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n    setEnvironment: function(environment) {\n        this._globalOptions.environment = environment;\n\n        return this;\n    },\n\n    /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n    setRelease: function(release) {\n        this._globalOptions.release = release;\n\n        return this;\n    },\n\n    /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n    setDataCallback: function(callback) {\n        var original = this._globalOptions.dataCallback;\n        this._globalOptions.dataCallback = isFunction(callback)\n          ? function (data) { return callback(data, original); }\n          : callback;\n\n        return this;\n    },\n\n    /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n    setShouldSendCallback: function(callback) {\n        var original = this._globalOptions.shouldSendCallback;\n        this._globalOptions.shouldSendCallback = isFunction(callback)\n            ? function (data) { return callback(data, original); }\n            : callback;\n\n        return this;\n    },\n\n    /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n    setTransport: function(transport) {\n        this._globalOptions.transport = transport;\n\n        return this;\n    },\n\n    /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n    lastException: function() {\n        return this._lastCapturedException;\n    },\n\n    /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n    lastEventId: function() {\n        return this._lastEventId;\n    },\n\n    /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n    isSetup: function() {\n        if (!this._hasJSON) return false;  // needs JSON support\n        if (!this._globalServer) {\n            if (!this.ravenNotConfiguredError) {\n              this.ravenNotConfiguredError = true;\n              this._logDebug('error', 'Error: Raven has not been configured.');\n            }\n            return false;\n        }\n        return true;\n    },\n\n    afterLoad: function () {\n        // TODO: remove window dependence?\n\n        // Attempt to initialize Raven on load\n        var RavenConfig = window.RavenConfig;\n        if (RavenConfig) {\n            this.config(RavenConfig.dsn, RavenConfig.config).install();\n        }\n    },\n\n    showReportDialog: function (options) {\n        if (!window.document) // doesn't work without a document (React native)\n            return;\n\n        options = options || {};\n\n        var lastEventId = options.eventId || this.lastEventId();\n        if (!lastEventId) {\n            throw new RavenConfigError('Missing eventId');\n        }\n\n        var dsn = options.dsn || this._dsn;\n        if (!dsn) {\n            throw new RavenConfigError('Missing DSN');\n        }\n\n        var encode = encodeURIComponent;\n        var qs = '';\n        qs += '?eventId=' + encode(lastEventId);\n        qs += '&dsn=' + encode(dsn);\n\n        var user = options.user || this._globalContext.user;\n        if (user) {\n            if (user.name)  qs += '&name=' + encode(user.name);\n            if (user.email) qs += '&email=' + encode(user.email);\n        }\n\n        var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = globalServer + '/api/embed/error-page/' + qs;\n        (document.head || document.body).appendChild(script);\n    },\n\n    /**** Private functions ****/\n    _ignoreNextOnError: function () {\n        var self = this;\n        this._ignoreOnError += 1;\n        setTimeout(function () {\n            // onerror should trigger before setTimeout\n            self._ignoreOnError -= 1;\n        });\n    },\n\n    _triggerEvent: function(eventType, options) {\n        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n        var evt, key;\n\n        if (!this._hasDocument)\n            return;\n\n        options = options || {};\n\n        eventType = 'raven' + eventType.substr(0,1).toUpperCase() + eventType.substr(1);\n\n        if (document.createEvent) {\n            evt = document.createEvent('HTMLEvents');\n            evt.initEvent(eventType, true, true);\n        } else {\n            evt = document.createEventObject();\n            evt.eventType = eventType;\n        }\n\n        for (key in options) if (hasKey(options, key)) {\n            evt[key] = options[key];\n        }\n\n        if (document.createEvent) {\n            // IE9 if standards\n            document.dispatchEvent(evt);\n        } else {\n            // IE8 regardless of Quirks or Standards\n            // IE9 if quirks\n            try {\n                document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n            } catch(e) {\n                // Do nothing\n            }\n        }\n    },\n\n    /**\n     * Wraps addEventListener to capture UI breadcrumbs\n     * @param evtName the event name (e.g. \"click\")\n     * @returns {Function}\n     * @private\n     */\n    _breadcrumbEventHandler: function(evtName) {\n        var self = this;\n        return function (evt) {\n            // reset keypress timeout; e.g. triggering a 'click' after\n            // a 'keypress' will reset the keypress debounce so that a new\n            // set of keypresses can be recorded\n            self._keypressTimeout = null;\n\n            // It's possible this handler might trigger multiple times for the same\n            // event (e.g. event propagation through node ancestors). Ignore if we've\n            // already captured the event.\n            if (self._lastCapturedEvent === evt)\n                return;\n\n            self._lastCapturedEvent = evt;\n            var elem = evt.target;\n\n            var target;\n\n            // try/catch htmlTreeAsString because it's particularly complicated, and\n            // just accessing the DOM incorrectly can throw an exception in some circumstances.\n            try {\n                target = htmlTreeAsString(elem);\n            } catch (e) {\n                target = '<unknown>';\n            }\n\n            self.captureBreadcrumb({\n                category: 'ui.' + evtName, // e.g. ui.click, ui.input\n                message: target\n            });\n        };\n    },\n\n    /**\n     * Wraps addEventListener to capture keypress UI events\n     * @returns {Function}\n     * @private\n     */\n    _keypressEventHandler: function() {\n        var self = this,\n            debounceDuration = 1000; // milliseconds\n\n        // TODO: if somehow user switches keypress target before\n        //       debounce timeout is triggered, we will only capture\n        //       a single breadcrumb from the FIRST target (acceptable?)\n\n        return function (evt) {\n            var target = evt.target,\n                tagName = target && target.tagName;\n\n            // only consider keypress events on actual input elements\n            // this will disregard keypresses targeting body (e.g. tabbing\n            // through elements, hotkeys, etc)\n            if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA')\n                return;\n\n            // record first keypress in a series, but ignore subsequent\n            // keypresses until debounce clears\n            var timeout = self._keypressTimeout;\n            if (!timeout) {\n                self._breadcrumbEventHandler('input')(evt);\n            }\n            clearTimeout(timeout);\n            self._keypressTimeout = setTimeout(function () {\n               self._keypressTimeout = null;\n            }, debounceDuration);\n        };\n    },\n\n    /**\n     * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n     * @param to the originating URL\n     * @param from the target URL\n     * @private\n     */\n    _captureUrlChange: function(from, to) {\n        var parsedLoc = parseUrl(this._location.href);\n        var parsedTo = parseUrl(to);\n        var parsedFrom = parseUrl(from);\n\n        // because onpopstate only tells you the \"new\" (to) value of location.href, and\n        // not the previous (from) value, we need to track the value of the current URL\n        // state ourselves\n        this._lastHref = to;\n\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n            to = parsedTo.relative;\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n            from = parsedFrom.relative;\n\n        this.captureBreadcrumb({\n            category: 'navigation',\n            data: {\n                to: to,\n                from: from\n            }\n        });\n    },\n\n    /**\n     * Install any queued plugins\n     */\n    _wrapBuiltIns: function() {\n        var self = this;\n\n        function fill(obj, name, replacement, noUndo) {\n            var orig = obj[name];\n            obj[name] = replacement(orig);\n            if (!noUndo) {\n                self._wrappedBuiltIns.push([obj, name, orig]);\n            }\n        }\n\n        function wrapTimeFn(orig) {\n            return function (fn, t) { // preserve arity\n                // Make a copy of the arguments to prevent deoptimization\n                // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n                var args = new Array(arguments.length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = arguments[i];\n                }\n                var originalCallback = args[0];\n                if (isFunction(originalCallback)) {\n                    args[0] = self.wrap(originalCallback);\n                }\n\n                // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n                // also supports only two arguments and doesn't care what this is, so we\n                // can just call the original function directly.\n                if (orig.apply) {\n                    return orig.apply(this, args);\n                } else {\n                    return orig(args[0], args[1]);\n                }\n            };\n        }\n\n        function wrapEventTarget(global) {\n            var proto = window[global] && window[global].prototype;\n            if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n                fill(proto, 'addEventListener', function(orig) {\n                    return function (evtName, fn, capture, secure) { // preserve arity\n                        try {\n                            if (fn && fn.handleEvent) {\n                                fn.handleEvent = self.wrap(fn.handleEvent);\n                            }\n                        } catch (err) {\n                            // can sometimes get 'Permission denied to access property \"handle Event'\n                        }\n\n\n                        // TODO: more than just click\n                        var before;\n                        if (global === 'EventTarget' || global === 'Node') {\n                            if (evtName === 'click'){\n                                before = self._breadcrumbEventHandler(evtName);\n                            } else if (evtName === 'keypress') {\n                                before = self._keypressEventHandler();\n                            }\n                        }\n                        return orig.call(this, evtName, self.wrap(fn, undefined, before), capture, secure);\n                    };\n                });\n                fill(proto, 'removeEventListener', function (orig) {\n                    return function (evt, fn, capture, secure) {\n                        fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__  : fn);\n                        return orig.call(this, evt, fn, capture, secure);\n                    };\n                });\n            }\n        }\n\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && isFunction(xhr[prop])) {\n                fill(xhr, prop, function (orig) {\n                    return self.wrap(orig);\n                }, true /* noUndo */); // don't track filled methods on XHR instances\n            }\n        }\n\n        fill(window, 'setTimeout', wrapTimeFn);\n        fill(window, 'setInterval', wrapTimeFn);\n        if (window.requestAnimationFrame) {\n            fill(window, 'requestAnimationFrame', function (orig) {\n                return function (cb) {\n                    return orig(self.wrap(cb));\n                };\n            });\n        }\n\n        // Capture breadcrubms from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        if (this._hasDocument) {\n            if (document.addEventListener) {\n                document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n                document.addEventListener('keypress', self._keypressEventHandler(), false);\n            }\n            else {\n                // IE8 Compatibility\n                document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n                document.attachEvent('onkeypress', self._keypressEventHandler());\n            }\n        }\n\n        // event targets borrowed from bugsnag-js:\n        // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n        var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n        for (var i = 0; i < eventTargets.length; i++) {\n            wrapEventTarget(eventTargets[i]);\n        }\n\n        if ('XMLHttpRequest' in window) {\n            var xhrproto = XMLHttpRequest.prototype;\n            fill(xhrproto, 'open', function(origOpen) {\n                return function (method, url) { // preserve arity\n\n                    // if Sentry key appears in URL, don't capture\n                    if (isString(url) && url.indexOf(self._globalKey) === -1) {\n                        this.__raven_xhr = {\n                            method: method,\n                            url: url,\n                            status_code: null\n                        };\n                    }\n\n                    return origOpen.apply(this, arguments);\n                };\n            });\n\n            fill(xhrproto, 'send', function(origSend) {\n                return function (data) { // preserve arity\n                    var xhr = this;\n\n                    function onreadystatechangeHandler() {\n                        if (xhr.__raven_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n                            try {\n                                // touching statusCode in some platforms throws\n                                // an exception\n                                xhr.__raven_xhr.status_code = xhr.status;\n                            } catch (e) { /* do nothing */ }\n                            self.captureBreadcrumb({\n                                type: 'http',\n                                category: 'xhr',\n                                data: xhr.__raven_xhr\n                            });\n                        }\n                    }\n\n                    var props = ['onload', 'onerror', 'onprogress'];\n                    for (var j = 0; j < props.length; j++) {\n                        wrapProp(props[j], xhr);\n                    }\n\n                    if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n                        fill(xhr, 'onreadystatechange', function (orig) {\n                            return self.wrap(orig, undefined, onreadystatechangeHandler);\n                        }, true /* noUndo */);\n                    } else {\n                        // if onreadystatechange wasn't actually set by the page on this xhr, we\n                        // are free to set our own and capture the breadcrumb\n                        xhr.onreadystatechange = onreadystatechangeHandler;\n                    }\n\n                    return origSend.apply(this, arguments);\n                };\n            });\n        }\n\n        // record navigation (URL) changes\n        // NOTE: in Chrome App environment, touching history.pushState, *even inside\n        //       a try/catch block*, will cause Chrome to output an error to console.error\n        // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n        var chrome = window.chrome;\n        var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n        var hasPushState = !isChromePackagedApp && window.history && history.pushState;\n        if (hasPushState) {\n            // TODO: remove onpopstate handler on uninstall()\n            var oldOnPopState = window.onpopstate;\n            window.onpopstate = function () {\n                var currentHref = self._location.href;\n                self._captureUrlChange(self._lastHref, currentHref);\n\n                if (oldOnPopState) {\n                    return oldOnPopState.apply(this, arguments);\n                }\n            };\n\n            fill(history, 'pushState', function (origPushState) {\n                // note history.pushState.length is 0; intentionally not declaring\n                // params to preserve 0 arity\n                return function(/* state, title, url */) {\n                    var url = arguments.length > 2 ? arguments[2] : undefined;\n\n                    // url argument is optional\n                    if (url) {\n                        // coerce to string (this is what pushState does)\n                        self._captureUrlChange(self._lastHref, url + '');\n                    }\n\n                    return origPushState.apply(this, arguments);\n                };\n            });\n        }\n\n        // console\n        var consoleMethodCallback = function (msg, data) {\n            self.captureBreadcrumb({\n                message: msg,\n                level: data.level,\n                category: 'console'\n            });\n        };\n\n        if ('console' in window && console.log) {\n            each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n                wrapConsoleMethod(console, level, consoleMethodCallback);\n            });\n        }\n\n        var $ = window.jQuery || window.$;\n        if ($ && $.fn && $.fn.ready) {\n            fill($.fn, 'ready', function (orig) {\n                return function (fn) {\n                    return orig.call(this, self.wrap(fn));\n                };\n            });\n        }\n    },\n\n    _restoreBuiltIns: function () {\n        // restore any wrapped builtins\n        var builtin;\n        while (this._wrappedBuiltIns.length) {\n            builtin = this._wrappedBuiltIns.shift();\n\n            var obj = builtin[0],\n              name = builtin[1],\n              orig = builtin[2];\n\n            obj[name] = orig;\n        }\n    },\n\n    _drainPlugins: function() {\n        var self = this;\n\n        // FIX ME TODO\n        each(this._plugins, function(_, plugin) {\n            var installer = plugin[0];\n            var args = plugin[1];\n            installer.apply(self, [self].concat(args));\n        });\n    },\n\n    _parseDSN: function(str) {\n        var m = dsnPattern.exec(str),\n            dsn = {},\n            i = 7;\n\n        try {\n            while (i--) dsn[dsnKeys[i]] = m[i] || '';\n        } catch(e) {\n            throw new RavenConfigError('Invalid DSN: ' + str);\n        }\n\n        if (dsn.pass && !this._globalOptions.allowSecretKey) {\n            throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n        }\n\n        return dsn;\n    },\n\n    _getGlobalServer: function(uri) {\n        // assemble the endpoint from the uri pieces\n        var globalServer = '//' + uri.host +\n            (uri.port ? ':' + uri.port : '');\n\n        if (uri.protocol) {\n            globalServer = uri.protocol + ':' + globalServer;\n        }\n        return globalServer;\n    },\n\n    _handleOnErrorStackInfo: function() {\n        // if we are intentionally ignoring errors via onerror, bail out\n        if (!this._ignoreOnError) {\n            this._handleStackInfo.apply(this, arguments);\n        }\n    },\n\n    _handleStackInfo: function(stackInfo, options) {\n        var self = this;\n        var frames = [];\n\n        if (stackInfo.stack && stackInfo.stack.length) {\n            each(stackInfo.stack, function(i, stack) {\n                var frame = self._normalizeFrame(stack);\n                if (frame) {\n                    frames.push(frame);\n                }\n            });\n        }\n\n        this._triggerEvent('handle', {\n            stackInfo: stackInfo,\n            options: options\n        });\n\n        this._processException(\n            stackInfo.name,\n            stackInfo.message,\n            stackInfo.url,\n            stackInfo.lineno,\n            frames.slice(0, this._globalOptions.stackTraceLimit),\n            options\n        );\n    },\n\n    _normalizeFrame: function(frame) {\n        if (!frame.url) return;\n\n        // normalize the frames data\n        var normalized = {\n            filename:   frame.url,\n            lineno:     frame.line,\n            colno:      frame.column,\n            'function': frame.func || '?'\n        };\n\n        normalized.in_app = !( // determine if an exception came from outside of our app\n            // first we check the global includePaths list.\n            !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n            // Now we check for fun, if the function name is Raven or TraceKit\n            /(Raven|TraceKit)\\./.test(normalized['function']) ||\n            // finally, we do a last ditch effort and check for raven.min.js\n            /raven\\.(min\\.)?js$/.test(normalized.filename)\n        );\n\n        return normalized;\n    },\n\n    _processException: function(type, message, fileurl, lineno, frames, options) {\n        var stacktrace;\n\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n\n        message += '';\n\n        if (frames && frames.length) {\n            fileurl = frames[0].filename || fileurl;\n            // Sentry expects frames oldest to newest\n            // and JS sends them as newest to oldest\n            frames.reverse();\n            stacktrace = {frames: frames};\n        } else if (fileurl) {\n            stacktrace = {\n                frames: [{\n                    filename: fileurl,\n                    lineno: lineno,\n                    in_app: true\n                }]\n            };\n        }\n\n        if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n        if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n\n        var data = objectMerge({\n            // sentry.interfaces.Exception\n            exception: {\n                values: [{\n                    type: type,\n                    value: message,\n                    stacktrace: stacktrace\n                }]\n            },\n            culprit: fileurl\n        }, options);\n\n        // Fire away!\n        this._send(data);\n    },\n\n    _trimPacket: function(data) {\n        // For now, we only want to truncate the two different messages\n        // but this could/should be expanded to just trim everything\n        var max = this._globalOptions.maxMessageLength;\n        if (data.message) {\n            data.message = truncate(data.message, max);\n        }\n        if (data.exception) {\n            var exception = data.exception.values[0];\n            exception.value = truncate(exception.value, max);\n        }\n\n        return data;\n    },\n\n    _getHttpData: function() {\n        if (!this._hasDocument || !document.location || !document.location.href) {\n            return;\n        }\n\n        var httpData = {\n            headers: {\n                'User-Agent': navigator.userAgent\n            }\n        };\n\n        httpData.url = document.location.href;\n\n        if (document.referrer) {\n            httpData.headers.Referer = document.referrer;\n        }\n\n        return httpData;\n    },\n\n\n    _send: function(data) {\n        var self = this;\n\n        var globalOptions = this._globalOptions;\n\n        var baseData = {\n            project: this._globalProject,\n            logger: globalOptions.logger,\n            platform: 'javascript'\n        }, httpData = this._getHttpData();\n\n        if (httpData) {\n            baseData.request = httpData;\n        }\n\n        data = objectMerge(baseData, data);\n\n        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n        data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n        data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n        // Send along our own collected metadata with extra\n        data.extra['session:duration'] = now() - this._startTime;\n\n        if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n            // intentionally make shallow copy so that additions\n            // to breadcrumbs aren't accidentally sent in this request\n            data.breadcrumbs = {\n                values: [].slice.call(this._breadcrumbs, 0)\n            };\n        }\n\n        // If there are no tags/extra, strip the key from the payload alltogther.\n        if (isEmptyObject(data.tags)) delete data.tags;\n\n        if (this._globalContext.user) {\n            // sentry.interfaces.User\n            data.user = this._globalContext.user;\n        }\n\n        // Include the environment if it's defined in globalOptions\n        if (globalOptions.environment) data.environment = globalOptions.environment;\n\n        // Include the release if it's defined in globalOptions\n        if (globalOptions.release) data.release = globalOptions.release;\n\n        // Include server_name if it's defined in globalOptions\n        if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n        if (isFunction(globalOptions.dataCallback)) {\n            data = globalOptions.dataCallback(data) || data;\n        }\n\n        // Why??????????\n        if (!data || isEmptyObject(data)) {\n            return;\n        }\n\n        // Check if the request should be filtered or not\n        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n            return;\n        }\n\n        // Send along an event_id if not explicitly passed.\n        // This event_id can be used to reference the error within Sentry itself.\n        // Set lastEventId after we know the error should actually be sent\n        this._lastEventId = data.event_id || (data.event_id = uuid4());\n\n        // Try and clean up the packet before sending by truncating long values\n        data = this._trimPacket(data);\n\n        this._logDebug('debug', 'Raven about to send:', data);\n\n        if (!this.isSetup()) return;\n\n        var auth = {\n            sentry_version: '7',\n            sentry_client: 'raven-js/' + this.VERSION,\n            sentry_key: this._globalKey\n        };\n        if (this._globalSecret) {\n            auth.sentry_secret = this._globalSecret;\n        }\n\n        var exception = data.exception && data.exception.values[0];\n        this.captureBreadcrumb({\n            category: 'sentry',\n            message: exception\n                ? (exception.type ? exception.type + ': ' : '') + exception.message\n                : data.message,\n            event_id: data.event_id,\n            level: data.level || 'error' // presume error unless specified\n        });\n\n        var url = this._globalEndpoint;\n        (globalOptions.transport || this._makeRequest).call(this, {\n            url: url,\n            auth: auth,\n            data: data,\n            options: globalOptions,\n            onSuccess: function success() {\n                self._triggerEvent('success', {\n                    data: data,\n                    src: url\n                });\n            },\n            onError: function failure() {\n                self._triggerEvent('failure', {\n                    data: data,\n                    src: url\n                });\n            }\n        });\n    },\n\n    _makeRequest: function(opts) {\n        var request = new XMLHttpRequest();\n\n        // if browser doesn't support CORS (e.g. IE7), we are out of luck\n        var hasCORS =\n            'withCredentials' in request ||\n            typeof XDomainRequest !== 'undefined';\n\n        if (!hasCORS) return;\n\n        var url = opts.url;\n        function handler() {\n            if (request.status === 200) {\n                if (opts.onSuccess) {\n                    opts.onSuccess();\n                }\n            } else if (opts.onError) {\n                opts.onError();\n            }\n        }\n\n        if ('withCredentials' in request) {\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                handler();\n            };\n        } else {\n            request = new XDomainRequest();\n            // xdomainrequest cannot go http -> https (or vice versa),\n            // so always use protocol relative\n            url = url.replace(/^https?:/, '');\n\n            // onreadystatechange not supported by XDomainRequest\n            request.onload = handler;\n        }\n\n        // NOTE: auth is intentionally sent as part of query string (NOT as custom\n        //       HTTP header) so as to avoid preflight CORS requests\n        request.open('POST', url + '?' + urlencode(opts.auth));\n        request.send(stringify(opts.data));\n    },\n\n    _logDebug: function(level) {\n        if (this._originalConsoleMethods[level] && this.debug) {\n            // In IE<10 console methods do not have their own 'apply' method\n            Function.prototype.apply.call(\n                this._originalConsoleMethods[level],\n                this._originalConsole,\n                [].slice.call(arguments, 1)\n            );\n        }\n    },\n\n    _mergeContext: function(key, context) {\n        if (isUndefined(context)) {\n            delete this._globalContext[key];\n        } else {\n            this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n        }\n    }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n\n},{\"1\":1,\"2\":2,\"3\":3,\"6\":6,\"7\":7}],5:[function(_dereq_,module,exports){\n/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\n'use strict';\n\nvar RavenConstructor = _dereq_(4);\n\nvar _Raven = window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function () {\n\twindow.Raven = _Raven;\n\treturn Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n\n},{\"4\":4}],6:[function(_dereq_,module,exports){\n/*eslint no-extra-parens:0*/\n'use strict';\n\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n    return what === void 0;\n}\n\nfunction isFunction(what) {\n    return typeof what === 'function';\n}\n\nfunction isString(what) {\n    return objectPrototype.toString.call(what) === '[object String]';\n}\n\nfunction isObject(what) {\n    return typeof what === 'object' && what !== null;\n}\n\nfunction isEmptyObject(what) {\n    for (var _ in what) return false;  // eslint-disable-line guard-for-in, no-unused-vars\n    return true;\n}\n\n// Sorta yanked from https://github.com/joyent/node/blob/aa3b4b4/lib/util.js#L560\n// with some tiny modifications\nfunction isError(what) {\n    var toString = objectPrototype.toString.call(what);\n    return isObject(what) &&\n        toString === '[object Error]' ||\n        toString === '[object Exception]' || // Firefox NS_ERROR_FAILURE Exceptions\n        what instanceof Error;\n}\n\nfunction each(obj, callback) {\n    var i, j;\n\n    if (isUndefined(obj.length)) {\n        for (i in obj) {\n            if (hasKey(obj, i)) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    } else {\n        j = obj.length;\n        if (j) {\n            for (i = 0; i < j; i++) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    }\n}\n\nfunction objectMerge(obj1, obj2) {\n    if (!obj2) {\n        return obj1;\n    }\n    each(obj2, function(key, value){\n        obj1[key] = value;\n    });\n    return obj1;\n}\n\nfunction truncate(str, max) {\n    return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n    return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n    // Combine an array of regular expressions and strings into one large regexp\n    // Be mad.\n    var sources = [],\n        i = 0, len = patterns.length,\n        pattern;\n\n    for (; i < len; i++) {\n        pattern = patterns[i];\n        if (isString(pattern)) {\n            // If it's a string, we need to escape it\n            // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n            sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n        } else if (pattern && pattern.source) {\n            // If it's a regexp already, we want to extract the source\n            sources.push(pattern.source);\n        }\n        // Intentionally skip other cases\n    }\n    return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n    var pairs = [];\n    each(o, function(key, value) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    });\n    return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) return {};\n\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        protocol: match[2],\n        host: match[4],\n        path: match[5],\n        relative: match[5] + query + fragment // everything minus origin\n    };\n}\nfunction uuid4() {\n    var crypto = window.crypto || window.msCrypto;\n\n    if (!isUndefined(crypto) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n\n        // set 4 in byte 7\n        arr[3] = arr[3] & 0xFFF | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n        var pad = function(num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = '0' + v;\n            }\n            return v;\n        };\n\n        return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n        pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    } else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0,\n                v = c === 'x' ? r : r&0x3|0x8;\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n    var MAX_TRAVERSE_HEIGHT = 5,\n        MAX_OUTPUT_LEN = 80,\n        out = [],\n        height = 0,\n        len = 0,\n        separator = ' > ',\n        sepLength = separator.length,\n        nextStr;\n\n    while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n\n        nextStr = htmlElementAsString(elem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\n            break;\n        }\n\n        out.push(nextStr);\n\n        len += nextStr.length;\n        elem = elem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n    var out = [],\n        className,\n        classes,\n        key,\n        attr,\n        i;\n\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push('#' + elem.id);\n    }\n\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(' ');\n        for (i = 0; i < classes.length; i++) {\n            out.push('.' + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push('[' + key + '=\"' + attr + '\"]');\n        }\n    }\n    return out.join('');\n}\n\nmodule.exports = {\n    isUndefined: isUndefined,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isEmptyObject: isEmptyObject,\n    isError: isError,\n    each: each,\n    objectMerge: objectMerge,\n    truncate: truncate,\n    hasKey: hasKey,\n    joinRegExp: joinRegExp,\n    urlencode: urlencode,\n    uuid4: uuid4,\n    htmlTreeAsString: htmlTreeAsString,\n    htmlElementAsString: htmlElementAsString,\n    parseUrl: parseUrl\n};\n\n},{}],7:[function(_dereq_,module,exports){\n'use strict';\n\nvar utils = _dereq_(6);\n\nvar hasKey = utils.hasKey;\nvar isString = utils.isString;\nvar isUndefined = utils.isUndefined;\n\n/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\nvar TraceKit = {\n    collectWindowErrors: true,\n    debug: false\n};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:Uncaught (?:exception: )?)?((?:Eval|Internal|Range|Reference|Syntax|Type|URI)Error): ?(.*)$/;\n\nfunction getLocationHref() {\n    if (typeof document === 'undefined')\n        return '';\n\n    return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Remove all crash handlers.\n     */\n    function unsubscribeAll() {\n        uninstallGlobalHandler();\n        handlers = [];\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (hasKey(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        } else if (ex) {\n            // New chrome and blink send along a real error object\n            // Let's just report that like a normal error.\n            // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n            stack = TraceKit.computeStackTrace(ex);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n                'url': url,\n                'line': lineNo,\n                'column': colNo\n            };\n\n            var name = undefined;\n            var msg = message; // must be new var or will modify original `arguments`\n            var groups;\n            if (isString(message)) {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n\n            location.func = UNKNOWN_FUNCTION;\n\n            stack = {\n                'name': name,\n                'message': msg,\n                'url': getLocationHref(),\n                'stack': [location]\n            };\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    function uninstallGlobalHandler ()\n    {\n        if (!_onErrorHandlerInstalled) {\n            return;\n        }\n        window.onerror = _oldOnerrorHandler;\n        _onErrorHandlerInstalled = false;\n        _oldOnerrorHandler = undefined;\n    }\n\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n    function report(ex, rethrow) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = args;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        if (rethrow !== false) {\n            throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n        }\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    report.uninstall = unsubscribeAll;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (isUndefined(ex.stack) || !ex.stack) return;\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|<anonymous>).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (!stack[0].column && !isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10 uses this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (isUndefined(ex.stacktrace) || !ex.stacktrace) return;\n\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n          opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n          lines = stacktrace.split('\\n'),\n          stack = [],\n          parts;\n\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[2],\n                    'line': +parts[1],\n                    'column': null,\n                    'func': parts[3],\n                    'args':[]\n                };\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    'url': parts[6],\n                    'line': +parts[1],\n                    'column': +parts[2],\n                    'func': parts[3] || parts[4],\n                    'args': parts[5] ? parts[5].split(',') : []\n                };\n            }\n\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = UNKNOWN_FUNCTION;\n                }\n\n                stack.push(element);\n            }\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack information.\n     */\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n            stack = [],\n            scripts = document.getElementsByTagName('script'),\n            parts;\n\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    'url': parts[2],\n                    'func': parts[3],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null\n                };\n            } else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    'url': parts[3],\n                    'func': parts[4],\n                    'args': [],\n                    'line': +parts[1],\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\n                };\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\n            } else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = window.location.href.replace(/#.*$/, '');\n                item = {\n                    'url': url,\n                    'func': '',\n                    'args': [],\n                    'line': parts[1],\n                    'column': null\n                };\n            }\n\n            if (item) {\n                if (!item.func) {\n                    item.func = UNKNOWN_FUNCTION;\n                }\n\n                stack.push(item);\n            }\n        }\n\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n\n        return {\n            'name': ex.name,\n            'message': lines[0],\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref()\n        };\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n    return computeStackTrace;\n}());\n\nmodule.exports = TraceKit;\n\n},{\"6\":6}]},{},[5])(5)\n});"]}