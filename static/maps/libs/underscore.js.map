{"version":3,"sources":["libs/underscore.js"],"names":["createReduce","index","iterator","obj","iteratee","memo","keys","length","results","dir","currentKey","context","arguments","isArrayLike","createPredicateIndexFinder","array","predicate","object","cb","values","result","getLength","list","createIndexFinder","predicateFind","sortedIndex","item","idx","i","value","Math","max","high","min","mid","low","slice","call","_","isNaN","nonEnumIdx","nonEnumerableProps","constructor","func","prototype","ObjProto","prop","has","contains","push","proto","partial","root","this","previousUnderscore","ArrayProto","Array","Object","FuncProto","Function","toString","hasOwnProperty","nativeIsArray","nativeKeys","nativeBind","bind","nativeCreate","create","Ctor","_wrapped","exports","module","optimizeCb","argCount","other","collection","accumulator","identity","isFunction","isObject","matcher","property","Infinity","createAssigner","keysFunc","source","l","key","baseCreate","undefinedOnly","MAX_ARRAY_INDEX","pow","each","forEach","map","inject","reduceRight","foldr","find","detect","reduce","findIndex","filter","select","every","all","reject","negate","some","fromIndex","guard","indexOf","invoke","method","includes","isFunc","apply","args","pluck","where","attrs","findWhere","computed","lastComputed","rand","set","random","shuffled","sample","n","shuffle","sortBy","criteria","sort","a","left","b","right","group","behavior","groupBy","indexBy","countBy","isArray","size","partition","pass","fail","first","take","initial","last","rest","tail","drop","compact","flatten","input","shallow","strict","startIndex","output","isArguments","j","len","difference","uniq","unique","isSorted","isBoolean","without","seen","intersection","argsLength","zip","unzip","findLastIndex","floor","lastIndexOf","range","stop","start","step","ceil","sourceFunc","boundFunc","callingContext","self","TypeError","bound","executeBound","concat","boundArgs","position","Error","memoize","cache","address","hasher","bindAll","delay","wait","defer","throttle","options","timeout","previous","leading","now","setTimeout","remaining","clearTimeout","trailing","later","immediate","timestamp","debounce","callNow","wrap","wrapper","compose","after","times","hasEnumBug","propertyIsEnumerable","collectNonEnumProps","allKeys","pairs","invert","functions","methods","names","extend","extendOwn","assign","pick","oiteratee","findKey","omit","String","defaults","props","clone","tap","isMatch","eq","aStack","bStack","className","interceptor","areArrays","aCtor","bCtor","pop","isEqual","isEmpty","isString","nodeType","type","_typeof","name","Int8Array","parseFloat","isNumber","isUndefined","noConflict","constant","noop","propertyOf","accum","Date","getTime","&","<",">","\"","'","`","unescapeMap","escaper","match","join","RegExp","string","replaceRegexp","escape","createEscaper","escapeMap","fallback","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","escapes","\r","\n"," "," ","escapeChar","text","settings","oldSettings","noMatch","replace","offset","variable","data","render","argument","template","chain","instance","_chain","mixin","toJSON","define","undefined"],"mappings":"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","file":"../../scripts/libs/underscore.js","sourcesContent":["//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n"]}